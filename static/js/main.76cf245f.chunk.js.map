{"version":3,"sources":["store/announcements/types.ts","store/announcements/actions.ts","components/Header/Header.tsx","store/announcements/selectors.ts","components/CustomForm/CustomForm.tsx","components/AnnouncementItem/AnnouncementItem.tsx","pages/Announcements/index.tsx","pages/AnnouncementDetails/index.tsx","pages/AnnouncementsSearch/index.tsx","App.tsx","reportWebVitals.ts","store/announcements/reducer.ts","store/rootReducer.ts","store/index.ts","index.tsx"],"names":["EnumAnnouncementsActionType","actionsAnnouncements","payload","type","EDIT","ADD","DELETE","SEARCH","useStyles","makeStyles","root","flexGrow","marginBottom","title","marginRight","navLink","color","textDecoration","navLinkActive","backgroundColor","padding","borderRadius","Header","classes","history","useHistory","dispatch","useDispatch","formik","useFormik","initialValues","searchText","onSubmit","values","push","className","AppBar","position","Toolbar","Grid","container","direction","spacing","alignItems","item","xs","md","Typography","variant","activeClassName","exact","to","handleSubmit","justify","TextField","onChange","handleChange","value","label","name","fullWidth","margin","required","Button","selectAnnouncements","state","announcementsState","announcements","getSearchAnnouncements","createSelector","text","filter","ann","toLowerCase","includes","CustomForm","description","addPost","buttonName","actions","resetForm","AnnouncementItem","id","deleteAnnouncement","Paper","elevation","style","onClick","Announcements","useSelector","addAnnouncementsWithForm","useCallback","map","post","AnnouncementDetails","React","useState","open","setOpen","announcementId","useParams","announcement","find","getAnnouncementById","editAnnouncement","Divider","AnnouncementsSearch","announcementsSearch","length","App","Container","maxWidth","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","date","Date","rootReducer","combineReducers","action","Math","random","toString","substr","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","makeStore","createStore","ReactDOM","render","basename","store","document","getElementById"],"mappings":"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","file":"static/js/main.76cf245f.chunk.js","sourcesContent":["import { Action } from 'redux'\r\n\r\nexport enum EnumAnnouncementsActionType {\r\n  ADD = 'announcements/ADD_ANNOUNCEMENTS',\r\n  EDIT = 'announcements/EDIT_ANNOUNCEMENT',\r\n  DELETE = 'announcements/DELETE_ANNOUNCEMENTS',\r\n  SEARCH = 'announcements/SEARCH_ANNOUNCEMENTS',\r\n}\r\n\r\nexport interface IAnnouncement {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  date: Date\r\n}\r\nexport interface IAnnouncementsState {\r\n  announcements: IAnnouncement[]\r\n  searchText: string | null\r\n}\r\n\r\n// Action type\r\nexport type PayloadAddToAnnouncements = Omit<IAnnouncement, 'id' | 'date'>\r\nexport type PayloadEditAnnouncements = Omit<IAnnouncement, 'date'>\r\n\r\nexport interface ISetAddAnnouncementAction extends Action<EnumAnnouncementsActionType> {\r\n  type: EnumAnnouncementsActionType.ADD\r\n  payload: PayloadAddToAnnouncements\r\n}\r\nexport interface IEditAnnouncementAction extends Action<EnumAnnouncementsActionType> {\r\n  type: EnumAnnouncementsActionType.EDIT\r\n  payload: PayloadEditAnnouncements\r\n}\r\n\r\nexport interface ISetDeleteAnnouncementAction\r\n  extends Action<EnumAnnouncementsActionType> {\r\n  type: EnumAnnouncementsActionType.DELETE\r\n  payload: string\r\n}\r\n\r\n// Search Announcements Action Type\r\nexport interface ISearchAnnouncementAction extends Action<EnumAnnouncementsActionType> {\r\n  type: EnumAnnouncementsActionType.SEARCH\r\n  payload: string\r\n}\r\n\r\nexport type AnnouncementsActionT =\r\n  | ISetAddAnnouncementAction\r\n  | ISetDeleteAnnouncementAction\r\n  | IEditAnnouncementAction\r\n  | ISearchAnnouncementAction\r\n","import {\r\n  EnumAnnouncementsActionType,\r\n  IEditAnnouncementAction,\r\n  ISearchAnnouncementAction,\r\n  ISetAddAnnouncementAction,\r\n  ISetDeleteAnnouncementAction,\r\n  PayloadAddToAnnouncements,\r\n  PayloadEditAnnouncements,\r\n} from './types'\r\n\r\nexport const actionsAnnouncements = {\r\n  edit: (payload: PayloadEditAnnouncements): IEditAnnouncementAction => ({\r\n    type: EnumAnnouncementsActionType.EDIT,\r\n    payload,\r\n  }),\r\n  add: (payload: PayloadAddToAnnouncements): ISetAddAnnouncementAction => ({\r\n    type: EnumAnnouncementsActionType.ADD,\r\n    payload,\r\n  }),\r\n  delete: (payload: string): ISetDeleteAnnouncementAction => ({\r\n    type: EnumAnnouncementsActionType.DELETE,\r\n    payload,\r\n  }),\r\n  setSearch: (payload: string): ISearchAnnouncementAction => ({\r\n    type: EnumAnnouncementsActionType.SEARCH,\r\n    payload,\r\n  }),\r\n}\r\n","import React from 'react'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useFormik } from 'formik'\r\n\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport { actionsAnnouncements } from '../../store/announcements/actions'\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    marginBottom: 20,\r\n  },\r\n  title: {\r\n    'display': 'flex',\r\n    'flexDirection': 'row',\r\n    '& h6': {\r\n      marginRight: '10px',\r\n    },\r\n  },\r\n  navLink: {\r\n    color: 'white',\r\n    textDecoration: 'none',\r\n  },\r\n  navLinkActive: {\r\n    color: 'white',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    padding: '5px',\r\n    borderRadius: '7px',\r\n  },\r\n})\r\n\r\nexport const Header: React.FC = () => {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      searchText: '',\r\n    },\r\n    onSubmit: (values) => {\r\n      dispatch(actionsAnnouncements.setSearch(values.searchText))\r\n      history.push('/search')\r\n    },\r\n  })\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Toolbar>\r\n          <Grid container direction='row' spacing={4} alignItems='center'>\r\n            <Grid item xs={12} md={7} className={classes.title}>\r\n              <Typography variant='h6'>\r\n                <NavLink\r\n                  activeClassName={classes.navLinkActive}\r\n                  className={classes.navLink}\r\n                  exact\r\n                  to='/'>\r\n                  Home\r\n                </NavLink>\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={5}>\r\n              <form onSubmit={formik.handleSubmit}>\r\n                <Grid container justify='center' alignItems='center'>\r\n                  <Grid item xs={8}>\r\n                    <TextField\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.searchText}\r\n                      label='Search'\r\n                      name='searchText'\r\n                      variant='outlined'\r\n                      fullWidth\r\n                      margin='normal'\r\n                      required={true}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Button color='inherit' type='submit'>\r\n                      Search\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  )\r\n}\r\n","import { createSelector } from 'reselect'\r\nimport { RootState } from '../rootReducer'\r\n\r\nexport const selectAnnouncements = (state: RootState) => {\r\n  return state.announcementsState.announcements\r\n}\r\nexport const selectSearchText = (state: RootState) => {\r\n  return state.announcementsState.searchText\r\n}\r\n\r\nexport const getAnnouncementById = (state: RootState, id: string) =>\r\n  createSelector(selectAnnouncements, (announcements) => {\r\n    return announcements.find((ann) => ann.id === id)\r\n  })(state)\r\n\r\nexport const getSearchAnnouncements = createSelector(\r\n  selectAnnouncements,\r\n  selectSearchText,\r\n  (announcements, text) => {\r\n    return (\r\n      text &&\r\n      announcements.filter((ann) => ann.title.toLowerCase().includes(text!.toLowerCase()))\r\n    )\r\n  }\r\n)\r\n","import React from 'react'\r\nimport { Formik, Form, FormikHelpers } from 'formik'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { PayloadAddToAnnouncements } from '../../store/announcements/types'\r\n\r\nexport interface IProps {\r\n  title?: string\r\n  description?: string\r\n  buttonName: string\r\n  addPost: ({ title, description }: { title: string; description: string }) => void\r\n}\r\n\r\nexport const CustomForm: React.FC<IProps> = ({\r\n  title = '',\r\n  description = '',\r\n  addPost,\r\n  buttonName,\r\n}) => {\r\n  const onSubmitForm = (\r\n    values: PayloadAddToAnnouncements,\r\n    actions: FormikHelpers<PayloadAddToAnnouncements>\r\n  ) => {\r\n    addPost(values)\r\n    actions.resetForm()\r\n  }\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          title,\r\n          description,\r\n        }}\r\n        onSubmit={onSubmitForm}>\r\n        {({ handleChange, values }) => (\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Form>\r\n                <TextField\r\n                  onChange={handleChange}\r\n                  value={values.title}\r\n                  label='Title'\r\n                  name='title'\r\n                  variant='outlined'\r\n                  fullWidth\r\n                  margin='normal'\r\n                  required={true}\r\n                />\r\n\r\n                <TextField\r\n                  value={values.description}\r\n                  onChange={handleChange}\r\n                  label='Description'\r\n                  name='description'\r\n                  variant='outlined'\r\n                  fullWidth\r\n                  margin='normal'\r\n                  required={true}\r\n                />\r\n                <Button color='primary' type='submit'>\r\n                  {buttonName}\r\n                </Button>\r\n              </Form>\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\n\r\ninterface IProps {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  deleteAnnouncement: (id: string) => void\r\n}\r\n\r\nexport const AnnouncementItem = ({\r\n  title,\r\n  id,\r\n  description,\r\n  deleteAnnouncement,\r\n}: IProps) => {\r\n  return (\r\n    <Grid item xs={12}>\r\n      <Paper elevation={7} style={{ padding: 10 }}>\r\n        <Grid container spacing={1} alignItems='center'>\r\n          <Grid item xs={12} md={10}>\r\n            <Typography variant='h6'>{title}</Typography>\r\n            <Typography>{description}</Typography>\r\n          </Grid>\r\n          <Grid container alignItems='center' item xs={12} md={2}>\r\n            <Grid item xs={6} md={6}>\r\n              <Button color='secondary' onClick={() => deleteAnnouncement(id)}>\r\n                delete\r\n              </Button>\r\n            </Grid>\r\n            <Grid container justify='flex-end' item xs={6} md={6}>\r\n              <Link to={`/announcement/${id}`}>\r\n                <Button color='primary'>more...</Button>\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport { selectAnnouncements } from '../../store/announcements/selectors'\r\nimport { actionsAnnouncements } from '../../store/announcements/actions'\r\nimport { CustomForm } from '../../components/CustomForm/CustomForm'\r\nimport { AnnouncementItem } from '../../components/AnnouncementItem/AnnouncementItem'\r\n\r\nexport const Announcements: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n  const announcements = useSelector(selectAnnouncements)\r\n\r\n  const addAnnouncementsWithForm = useCallback(\r\n    ({ title, description }) => {\r\n      dispatch(actionsAnnouncements.add({ title, description }))\r\n    },\r\n    [dispatch]\r\n  )\r\n  const deleteAnnouncement = useCallback(\r\n    (id: string) => {\r\n      dispatch(actionsAnnouncements.delete(id))\r\n    },\r\n    [dispatch]\r\n  )\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {announcements.map((post) => (\r\n        <AnnouncementItem\r\n          deleteAnnouncement={deleteAnnouncement}\r\n          title={post.title}\r\n          description={post.description}\r\n          key={post.id}\r\n          id={post.id}\r\n        />\r\n      ))}\r\n\r\n      <Grid container justify='center' item>\r\n        <CustomForm buttonName='Add' addPost={addAnnouncementsWithForm} />\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Button from '@material-ui/core/Button'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\nimport { getAnnouncementById } from '../../store/announcements/selectors'\r\nimport { RootState } from '../../store/rootReducer'\r\nimport { CustomForm } from '../../components/CustomForm/CustomForm'\r\nimport { actionsAnnouncements } from '../../store/announcements/actions'\r\n\r\nexport const AnnouncementDetails: React.FC = () => {\r\n  const [open, setOpen] = React.useState<boolean>(false)\r\n  const { announcementId } = useParams<{ announcementId: string }>()\r\n  const dispatch = useDispatch()\r\n\r\n  const announcement = useSelector((state: RootState) =>\r\n    getAnnouncementById(state, announcementId)\r\n  )\r\n\r\n  const editAnnouncement = useCallback(\r\n    ({ title, description }) => {\r\n      dispatch(actionsAnnouncements.edit({ title, description, id: announcementId }))\r\n      setOpen(false)\r\n    },\r\n    [dispatch, announcementId]\r\n  )\r\n\r\n  if (!announcement) return <div> no yet this announcement</div>\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      <Grid item xs={12}>\r\n        <Paper elevation={7} style={{ padding: 10 }}>\r\n          <Grid container spacing={1} alignItems='center'>\r\n            <Grid item xs={12}>\r\n              <Typography variant='h6'>{announcement.title}</Typography>\r\n              <Divider />\r\n              <Typography>{announcement.description}</Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button variant='outlined' color='primary' onClick={() => setOpen(!open)}>\r\n                {open ? <>Close form</> : <>Open edit form</>}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n          {open && (\r\n            <Grid container justify='center' item>\r\n              <CustomForm\r\n                buttonName='Edit'\r\n                addPost={editAnnouncement}\r\n                title={announcement.title}\r\n                description={announcement.description}\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Paper>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport Grid from '@material-ui/core/Grid'\r\n\r\nimport { getSearchAnnouncements } from '../../store/announcements/selectors'\r\nimport { actionsAnnouncements } from '../../store/announcements/actions'\r\n\r\nimport { AnnouncementItem } from '../../components/AnnouncementItem/AnnouncementItem'\r\n\r\nexport const AnnouncementsSearch: React.FC = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  const announcementsSearch = useSelector(getSearchAnnouncements)\r\n\r\n  const deleteAnnouncement = useCallback(\r\n    (id: string) => {\r\n      dispatch(actionsAnnouncements.delete(id))\r\n    },\r\n    [dispatch]\r\n  )\r\n  if (!announcementsSearch || announcementsSearch.length === 0)\r\n    return <div> no yet this announcement</div>\r\n\r\n  return (\r\n    <Grid container spacing={4}>\r\n      {announcementsSearch.map((post) => (\r\n        <AnnouncementItem\r\n          deleteAnnouncement={deleteAnnouncement}\r\n          title={post.title}\r\n          description={post.description}\r\n          key={post.id}\r\n          id={post.id}\r\n        />\r\n      ))}\r\n    </Grid>\r\n  )\r\n}\r\n","import React from 'react'\n\nimport './App.css'\nimport { Container } from '@material-ui/core'\n\nimport { Switch } from 'react-router'\nimport { Route } from 'react-router-dom'\n\nimport { Header } from './components/Header/Header'\nimport { Announcements } from './pages/Announcements'\nimport { AnnouncementDetails } from './pages/AnnouncementDetails'\nimport { AnnouncementsSearch } from './pages/AnnouncementsSearch'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Header></Header>\n      <Container maxWidth='md'>\n        <Switch>\n          <Route exact path='/' component={Announcements} />\n\n          <Route\n            exact\n            path='/announcement/:announcementId'\n            component={AnnouncementDetails}\n          />\n          <Route exact path='/search' component={AnnouncementsSearch} />\n        </Switch>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  AnnouncementsActionT,\r\n  EnumAnnouncementsActionType,\r\n  IAnnouncementsState,\r\n} from './types'\r\n\r\nconst initialState: IAnnouncementsState = {\r\n  announcements: [\r\n    {\r\n      id: '1',\r\n      title: ' Why do we use it? ',\r\n      description: ' It is sj a long. ',\r\n      date: new Date(),\r\n    },\r\n    {\r\n      id: '2',\r\n      title: ' What is Lorem Ipsum? ',\r\n      description: 'Lorem7777  88554 Lorem Ipsum  ',\r\n      date: new Date(),\r\n    },\r\n    {\r\n      id: '3',\r\n      title: ' Why Learn ReactJS? ',\r\n      description: ' React  offers ',\r\n      date: new Date(),\r\n    },\r\n    {\r\n      id: '4',\r\n      title: ' What is Lorem Ipsum ',\r\n      description: ' Lore dfg dfg dfg  Ipsum ',\r\n      date: new Date(),\r\n    },\r\n    {\r\n      id: '5',\r\n      title: ' What is Lorem Ipsum ',\r\n      description: ' Lo777rem Ipsum ',\r\n      date: new Date(),\r\n    },\r\n  ],\r\n  searchText: null,\r\n}\r\n\r\nexport const announcementsReducer = (\r\n  state = initialState,\r\n  action: AnnouncementsActionT\r\n): IAnnouncementsState => {\r\n  switch (action.type) {\r\n    case EnumAnnouncementsActionType.EDIT:\r\n      return {\r\n        ...state,\r\n        announcements: state.announcements.map((ann) => {\r\n          if (ann.id === action.payload.id) {\r\n            return {\r\n              ...ann,\r\n              title: action.payload.title,\r\n              description: action.payload.description,\r\n            }\r\n          }\r\n          return ann\r\n        }),\r\n      }\r\n    case EnumAnnouncementsActionType.ADD:\r\n      return {\r\n        ...state,\r\n        announcements: [\r\n          ...state.announcements,\r\n          {\r\n            ...action.payload,\r\n            id: Math.random().toString(36).substr(2, 9),\r\n            date: new Date(),\r\n          },\r\n        ],\r\n      }\r\n    case EnumAnnouncementsActionType.DELETE:\r\n      return {\r\n        ...state,\r\n        announcements: state.announcements.filter((ann) => ann.id !== action.payload),\r\n      }\r\n    case EnumAnnouncementsActionType.SEARCH:\r\n      return {\r\n        ...state,\r\n        searchText: action.payload,\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { announcementsReducer } from './announcements/reducer'\r\nimport { IAnnouncementsState } from './announcements/types'\r\n\r\nexport const rootReducer = combineReducers({\r\n  announcementsState: announcementsReducer,\r\n})\r\n\r\nexport type RootState = {\r\n  announcementsState: IAnnouncementsState\r\n}\r\n","import { compose, createStore } from 'redux'\r\n\r\nimport { rootReducer } from './rootReducer'\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose\r\n  }\r\n}\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport const makeStore = createStore(rootReducer, composeEnhancers())\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nimport { Provider } from 'react-redux'\nimport { makeStore } from './store'\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <BrowserRouter basename='/nerdysoft-test'>\n    <Provider store={makeStore}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}